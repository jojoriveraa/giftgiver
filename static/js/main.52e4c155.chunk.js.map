{"version":3,"sources":["components/Gift.js","components/App.js","helper/index.js","index.js"],"names":["Gift","state","person","present","className","Form","FormGroup","FormLabel","FormControl","onChange","event","setState","target","value","Button","onClick","props","removeGift","gift","id","Component","App","addGift","numbers","gifts","push","map","g","length","Math","max","filter","this","key","render","document","getElementById"],"mappings":"gSA8CeA,E,YApCb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CAAEC,OAAQ,GAAIC,QAAS,IAFxB,E,sEAIJ,IAAD,OACP,OACE,yBAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACEJ,UAAU,eACVK,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAET,OAAQQ,EAAME,OAAOC,YAG5D,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACEJ,UAAU,gBACVK,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAER,QAASO,EAAME,OAAOC,aAK9C,kBAACC,EAAA,EAAD,CACEV,UAAU,aACVW,QAAS,kBAAM,EAAKC,MAAMC,WAAW,EAAKD,MAAME,KAAKC,MAFvD,oB,GA1BWC,aCuCJC,E,YA1Cb,aAAe,IAAD,8BACZ,+CAIFC,QAAU,WAAM,ICXCC,EDiBPC,EAAU,EAAKvB,MAAfuB,MACRA,EAAMC,KAAK,CAAEN,IClBEI,EDkBaC,EAAME,KAAI,SAAAC,GAAC,OAAIA,EAAER,OClBlBI,EAAQK,OAAS,EAAIC,KAAKC,IAAL,MAAAD,KAAI,YAAQN,IAAW,GDkBnB,KACpD,EAAKZ,SAAS,CAAEa,WAbJ,EAgBdP,WAAa,SAAAE,GAKX,IAAMK,EAAQ,EAAKvB,MAAMuB,MAAMO,QAAO,SAAAb,GAAI,OAAIA,EAAKC,KAAOA,KAC1D,EAAKR,SAAS,CAAEa,WApBhB,EAAKvB,MAAQ,CAAEuB,MAAO,IAFV,E,sEAyBJ,IAAD,OACP,OACE,6BACE,0CACA,yBAAKpB,UAAU,aACZ4B,KAAK/B,MAAMuB,MAAME,KAAI,SAAAC,GACpB,OAAO,kBAAC,EAAD,CAAMM,IAAKN,EAAER,GAAID,KAAMS,EAAGV,WAAY,EAAKA,iBAGtD,kBAACH,EAAA,EAAD,CAAQV,UAAU,UAAUW,QAASiB,KAAKV,SAA1C,iB,GAnCUF,a,MEAlBc,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.52e4c155.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Button\n} from 'react-bootstrap';\n\nclass Gift extends Component {\n  constructor() {\n    super();\n    this.state = { person: '', present: '' };\n  }\n  render() {\n    return (\n      <div className=\"gift\">\n        <Form>\n          <FormGroup>\n            <FormLabel>Person</FormLabel>\n            <FormControl\n              className=\"input-person\"\n              onChange={event => this.setState({ person: event.target.value })}\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Present</FormLabel>\n            <FormControl\n              className=\"input-present\"\n              onChange={event => {\n                this.setState({ present: event.target.value });\n              }}\n            />\n          </FormGroup>\n        </Form>\n        <Button\n          className=\"btn-remove\"\n          onClick={() => this.props.removeGift(this.props.gift.id)}\n        >\n          Remove gift\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Gift;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { max_number } from '../helper';\nimport Gift from './Gift';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { gifts: [] };\n  }\n\n  addGift = () => {\n    /**\n     * Get all the gifts and the max id in the array.\n     * Then calculate the new id and add that gift to the array.\n     * Finally, save the array as the new gift list\n     */\n    const { gifts } = this.state;\n    gifts.push({ id: max_number(gifts.map(g => g.id)) + 1 });\n    this.setState({ gifts });\n  };\n\n  removeGift = id => {\n    /**\n     * Get all the gifts but the one with selected id and\n     * save the array as the new gift list\n     */\n    const gifts = this.state.gifts.filter(gift => gift.id !== id);\n    this.setState({ gifts });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Gift Giver</h2>\n        <div className=\"gift-list\">\n          {this.state.gifts.map(g => {\n            return <Gift key={g.id} gift={g} removeGift={this.removeGift} />;\n          })}\n        </div>\n        <Button className=\"btn-add\" onClick={this.addGift}>\n          Add Gift\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const max_number = numbers => (numbers.length > 0 ? Math.max(...numbers) : 0);\nexport { max_number };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}